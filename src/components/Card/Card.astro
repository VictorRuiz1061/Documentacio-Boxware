---
import { AnimacionSubida } from '../AnimacionSubida';
import CopyButton from '../CopyButton.astro';

interface Props {
  title: string;
  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
  endpoint: string;
  description: string;
  requestBody?: Record<string, any>;
  hasGlassEffect?: boolean;
}

const {
  title,
  method,
  endpoint,
  description,
  requestBody,
  hasGlassEffect = true,
} = Astro.props;

// Definir el color del m√©todo HTTP
const methodColors = {
  GET: 'bg-blue-500',
  POST: 'bg-green-500',
  PUT: 'bg-yellow-500',
  DELETE: 'bg-red-500',
  PATCH: 'bg-purple-500'
} as const;

const methodColor = methodColors[method];
---

<div class={`rounded-xl overflow-hidden ${hasGlassEffect ? 'backdrop-blur-md bg-slate-800/60 border border-slate-700' : 'bg-white dark:bg-gray-800'}`}>
  <div class="p-6">
    <div class="flex items-start justify-between">
      <div>
        <h3 class="text-xl font-semibold text-white mb-2">{title}</h3>
        <p class="text-slate-300 text-sm mb-4">{description}</p>
      </div>
      <span class={`${methodColor} text-white text-sm font-medium px-3 py-1 rounded-full`}>
        {method}
      </span>
    </div>

    <div class="mt-4">
      <div class="flex items-center space-x-2 bg-slate-900/50 p-3 rounded-lg">
        <code class="text-indigo-300 text-sm flex-1">{endpoint}</code>
        <CopyButton textToCopy={endpoint} />
      </div>

      {requestBody && (
        <div class="mt-4">
          <h4 class="text-sm font-medium text-slate-300 mb-2">Request Body:</h4>
          <div class="bg-slate-900/50 p-3 rounded-lg relative group">
            <pre class="text-indigo-300 text-sm overflow-x-auto"><code>{JSON.stringify(requestBody, null, 2)}</code></pre>
            <CopyButton textToCopy={JSON.stringify(requestBody, null, 2)} className="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity" />
          </div>
        </div>
      )}
    </div>
  </div>
</div>
