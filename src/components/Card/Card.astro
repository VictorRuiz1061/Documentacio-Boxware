---
import { AnimacionSubida } from '../AnimacionSubida';
import CopyButton from '../CopyButton.astro';

interface Props {
  title: string;
  description?: string;
  hasGlassEffect?: boolean;
}

const {
  title,
  description,
  hasGlassEffect = true,
} = Astro.props;
---

<div class={`
  rounded-2xl 
  overflow-hidden 
  ${hasGlassEffect ? 'backdrop-blur-lg bg-slate-800/40 border border-slate-700/50' : 'bg-white dark:bg-gray-800'}
  shadow-2xl
  shadow-blue-500/10
  hover:shadow-blue-500/20
  transition-all
  duration-300
  hover:scale-[1.02]
  transform
`}>
  <div class="p-12 relative">
    <!-- Efecto de brillo superior -->
    <div class="absolute top-0 left-1/2 -translate-x-1/2 w-3/4 h-px bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></div>
    
    <div class="flex flex-col items-center justify-center text-center relative z-10">
      <h1 class="
        text-6xl 
        font-bold 
        text-transparent 
        bg-clip-text 
        bg-gradient-to-r 
        from-blue-400 
        via-indigo-400 
        to-purple-400 
        mb-8
        tracking-tight
        animate-gradient
      ">{title}</h1>
      
      {description && (
        <p class="
          text-slate-300 
          text-xl 
          max-w-2xl 
          leading-relaxed
          font-light
        ">{description}</p>
      )}
    </div>

    <!-- Efecto de brillo inferior -->
    <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-3/4 h-px bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></div>
  </div>
</div>

<style>
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .animate-gradient {
    background-size: 200% auto;
    animation: gradient 8s ease infinite;
  }
</style>
