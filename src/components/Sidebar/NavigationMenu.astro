---
interface Props {
  isAdmin: boolean;
}

const { isAdmin } = Astro.props;
const currentPath = Astro.url.pathname;
const isRequirimientos = currentPath === '/requirimientos' || currentPath === '/pdf-requerimientos';

// Definimos los elementos de navegación
const menuItems = [
  { 
    name: 'Inicio', 
    icon: 'home', 
    url: '/',
    badge: ''
  },
  { 
    name: 'Usuarios', 
    icon: 'code', 
    url: '/usuario',
    badge: 'Doc'
  },
  { 
    name: 'Áreas', 
    icon: 'layout', 
    url: '/area',
    badge: 'Doc'
  },
  { 
    name: 'Categorías de Elementos', 
    icon: 'package', 
    url: '/categoria-elementos',
    badge: 'Doc'
  },
  { 
    name: 'Centros', 
    icon: 'map-pin', 
    url: '/centros',
    badge: 'Doc'
  },
  { 
    name: 'Sedes', 
    icon: 'building', 
    url: '/sedes',
    badge: 'Doc'
  },
  { 
    name: 'Municipios', 
    icon: 'map', 
    url: '/municipios',
    badge: 'Doc'
  },
  { 
    name: 'Fichas', 
    icon: 'file-text', 
    url: '/fichas',
    badge: 'Doc'
  },
  { 
    name: 'Materiales', 
    icon: 'box', 
    url: '/materiales',
    badge: 'Doc'
  },
  { 
    name: 'Módulos', 
    icon: 'grid', 
    url: '/modulo',
    badge: 'Doc'
  },
  { 
    name: 'Movimientos', 
    icon: 'refresh-cw', 
    url: '/movimientos',
    badge: 'Doc'
  },
  { 
    name: 'Permisos', 
    icon: 'key', 
    url: '/permiso',
    badge: 'Doc'
  },
  { 
    name: 'Programas', 
    icon: 'book-open', 
    url: '/programas',
    badge: 'Doc'
  },
  { 
    name: 'Roles', 
    icon: 'users', 
    url: '/roles',
    badge: 'Doc'
  },
  { 
    name: 'Sitios', 
    icon: 'map-pin', 
    url: '/sitios',
    badge: 'Doc'
  },
  { 
    name: 'Tipo Materiales', 
    icon: 'layers', 
    url: '/tipo-materiales',
    badge: 'Doc'
  },
  { 
    name: 'Tipos de Movimiento', 
    icon: 'repeat', 
    url: '/tipos-movimiento',
    badge: 'Doc'
  },
  
  { 
  name: 'Tipos de Sitio', 
  icon: 'target', 
  url: '/tipos-sitio',
  badge: 'Doc'
},
  
];

// Elementos solo para administradores
const adminMenuItems = [
  { 
    name: 'Panel Admin', 
    icon: 'shield', 
    url: '/admin',
    badge: ''
  },
  { 
    name: 'Gestión Usuarios', 
    icon: 'users', 
    url: '/admin/users',
    badge: '3'
  },
];

// Combinamos los menús si el usuario es administrador
const finalMenuItems = isAdmin ? [...menuItems, ...adminMenuItems] : menuItems;

// Sección de documentación separada
const documentItems = [
  {
    name: 'Requerimientos',
    icon: 'file-text',
    url: '/requirimientos',
    badge: 'PDF'
  },
  {
    name: 'Ver PDF Requerimientos',
    icon: 'file-text',
    url: '/pdf-requerimientos',
    badge: 'Doc'
  }
];
---

<div class="py-4">
  <!-- Sección principal de APIs - Solo se muestra cuando NO estamos en rutas de requerimientos -->
  {!isRequirimientos && (
    <div class="px-4 pb-4">
      <h3 class="text-xs uppercase text-indigo-300 font-medium tracking-wider mb-4 px-2">
        APIs
      </h3>
      <nav class="space-y-1">
        {menuItems.map((item) => (
          <a
            href={item.url}
            class={`flex items-center px-4 py-3 text-sm rounded-lg transition-colors relative ${
              currentPath === item.url
                ? 'text-white bg-gradient-to-r from-blue-700/60 to-indigo-700/60 shadow-md font-medium'
                : 'text-indigo-100 hover:bg-white/10'
            }`}
          >
            <span class="mr-3 text-indigo-300">
              {item.icon === 'home' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
              }
              {item.icon === 'document' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
              }
              {item.icon === 'code' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                </svg>
              }
              {item.icon === 'user' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              }
              {item.icon === 'shield' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                </svg>
              }
              {item.icon === 'users' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                </svg>
              }
              {item.icon === 'refresh-cw' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
              }
              {item.icon === 'key' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M15 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              }
              {item.icon === 'book-open' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M12 20H6a2 2 0 01-2-2V6a2 2 0 012-2h6m0 16h6a2 2 0 002-2V6a2 2 0 00-2-2h-6m0 16V4" />
                </svg>
              }
              {item.icon === 'layers' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2m0-2h.01M12 9v2m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              }
              {item.icon === 'repeat' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
              }
              {item.icon === 'target' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
  </svg>
}
{item.icon === 'layout' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <rect x="3" y="4" width="7" height="16" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
    <rect x="14" y="4" width="7" height="7" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
    <rect x="14" y="13" width="7" height="7" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
  </svg>
}
{item.icon === 'package' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M21 16V8a2 2 0 00-1-1.73l-7-4a2 2 0 00-2 0l-7 4A2 2 0 003 8v8a2 2 0 001 1.73l7 4a2 2 0 002 0l7-4a2 2 0 001-1.73z" />
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M3.27 6.96l8.73 4.99 8.73-4.99" />
  </svg>
}
{item.icon === 'map-pin' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M12 21c-4.418 0-8-5.373-8-10a8 8 0 1116 0c0 4.627-3.582 10-8 10z" />
    <circle cx="12" cy="11" r="3" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
  </svg>
}
{item.icon === 'building' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <rect x="3" y="7" width="18" height="13" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M9 21V9h6v12" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
  </svg>
}
{item.icon === 'map' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <polygon points="9 3 15 3 21 7 21 21 3 21 3 7 9 3" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M9 3v18M15 3v18" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
  </svg>
}
{item.icon === 'file-text' && 
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M7 7h10M7 11h10M7 15h6" />
    <rect x="4" y="4" width="16" height="16" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
  </svg>
}
              {item.icon === 'box' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <rect x="3" y="7" width="18" height="13" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                  <path d="M16 3v4M8 3v4M3 11h18" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
              }
              {item.icon === 'grid' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <rect x="3" y="3" width="7" height="7" rx="1.5" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                  <rect x="14" y="3" width="7" height="7" rx="1.5" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                  <rect x="14" y="14" width="7" height="7" rx="1.5" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                  <rect x="3" y="14" width="7" height="7" rx="1.5" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
              }
            </span>
            <span>{item.name}</span>
            {item.badge && (
              <span class="ml-auto bg-blue-600/50 text-[10px] py-0.5 px-1.5 rounded-md text-blue-100 font-medium">
                {item.badge}
              </span>
            )}
          </a>
        ))}
      </nav>
    </div>
  )}

  <!-- Sección de documentación - solo se muestra en las rutas de requerimientos -->
  {isRequirimientos && (
    <div class="px-4 pt-2 animate-fadeIn">
      <h3 class="text-xs uppercase text-indigo-300 font-medium tracking-wider my-4 px-2 flex items-center">
        <span class="w-2 h-2 bg-blue-400 rounded-full mr-2 animate-pulse"></span>
        Documentación
      </h3>
      <nav class="space-y-1">
        {documentItems.map((item) => (
          <a
            href={item.url}
            class={`flex items-center px-4 py-3 text-sm rounded-lg transition-colors relative ${
              currentPath === item.url
                ? 'text-white bg-gradient-to-r from-blue-700/60 to-indigo-700/60 shadow-md font-medium'
                : 'text-indigo-100 hover:bg-white/10'
            }`}
          >
            <span class="mr-3 text-indigo-300">
              {item.icon === 'file-text' && 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.75" d="M7 7h10M7 11h10M7 15h6" />
                  <rect x="4" y="4" width="16" height="16" rx="2" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
              }
            </span>
            <span>{item.name}</span>
            {item.badge && (
              <span class="ml-auto bg-blue-600/50 text-[10px] py-0.5 px-1.5 rounded-md text-blue-100 font-medium">
                {item.badge}
              </span>
            )}
          </a>
        ))}
      </nav>
    </div>
  )}
</div>
